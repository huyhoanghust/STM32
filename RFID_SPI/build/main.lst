ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	Error_Handler:
  25              	.LFB70:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "spi.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "rc522.h"
  29:Core/Src/main.c **** #include "stdio.h"
  30:Core/Src/main.c **** #include "i2c-lcd.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 2


  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** uint8_t CardID[5] = {0};
  51:Core/Src/main.c **** char szBuff[100]= {0};
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_USART1_UART_Init();
  94:Core/Src/main.c ****   MX_SPI1_Init();
  95:Core/Src/main.c ****   MX_I2C1_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c ****   //TM_MFRC522_Init();
  98:Core/Src/main.c ****   rc522_init();
  99:Core/Src/main.c ****   lcd_init();
 100:Core/Src/main.c ****   lcd_clear_display();
 101:Core/Src/main.c ****   /* USER CODE END 2 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Infinite loop */
 104:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 105:Core/Src/main.c ****   while (1)
 106:Core/Src/main.c ****   {
 107:Core/Src/main.c ****     /* USER CODE END WHILE */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 110:Core/Src/main.c ****     // if (TM_MFRC522_Check(CardID) == MI_OK) 
 111:Core/Src/main.c ****     // {
 112:Core/Src/main.c **** 		// 	sprintf(szBuff, "ID: 0x%02X%02X%02X%02X%02X", CardID[0], CardID[1], CardID[2], CardID[3], Car
 113:Core/Src/main.c ****     //   HAL_Delay(2000);
 114:Core/Src/main.c **** 		// }
 115:Core/Src/main.c ****     //HAL_UART_Transmit(&huart1, "waiting!", strlen("waiting!"), 1000);
 116:Core/Src/main.c ****     lcd_goto_XY(1,0);
 117:Core/Src/main.c ****     lcd_send_string("Waiting.....");
 118:Core/Src/main.c ****     HAL_Delay(100);
 119:Core/Src/main.c ****     if(rc522_check(CardID) == RC522_OK)
 120:Core/Src/main.c ****     {
 121:Core/Src/main.c ****       sprintf(szBuff, "ID: %02X %02X %02X %02X", CardID[0], CardID[1], CardID[2], CardID[3]);
 122:Core/Src/main.c ****       //HAL_UART_Transmit(&huart1, (uint8_t *)szBuff, strlen(szBuff), 1000);
 123:Core/Src/main.c ****       lcd_clear_display();
 124:Core/Src/main.c ****       lcd_goto_XY(1,0);
 125:Core/Src/main.c ****       lcd_send_string("MandeviceLab");
 126:Core/Src/main.c ****       lcd_goto_XY(2,0);
 127:Core/Src/main.c ****       lcd_send_string(szBuff);
 128:Core/Src/main.c ****       HAL_Delay(4000);
 129:Core/Src/main.c ****       lcd_clear_display();
 130:Core/Src/main.c ****     }
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c ****   /* USER CODE END 3 */
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief System Clock Configuration
 137:Core/Src/main.c ****   * @retval None
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** void SystemClock_Config(void)
 140:Core/Src/main.c **** {
 141:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 145:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 146:Core/Src/main.c ****   */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 4


 147:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /* USER CODE END 4 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** /**
 179:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** void Error_Handler(void)
 183:Core/Src/main.c **** {
  27              		.loc 1 183 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 184:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 185:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 186:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 186 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 5


   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 6


  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 7


 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 187:Core/Src/main.c ****   while (1)
  49              		.loc 1 187 3 discriminator 1 view .LVU4
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****   }
  50              		.loc 1 189 3 discriminator 1 view .LVU5
 187:Core/Src/main.c ****   while (1)
  51              		.loc 1 187 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE70:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  63              	SystemClock_Config:
  64              	.LFB69:
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 140 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 64
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 00B5     		push	{lr}
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 8


  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 14, -4
  73 0002 91B0     		sub	sp, sp, #68
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 72
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 141 3 view .LVU8
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 141 22 is_stmt 0 view .LVU9
  78 0004 2822     		movs	r2, #40
  79 0006 0021     		movs	r1, #0
  80 0008 06A8     		add	r0, sp, #24
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 142:Core/Src/main.c **** 
  83              		.loc 1 142 3 is_stmt 1 view .LVU10
 142:Core/Src/main.c **** 
  84              		.loc 1 142 22 is_stmt 0 view .LVU11
  85 000e 0023     		movs	r3, #0
  86 0010 0193     		str	r3, [sp, #4]
  87 0012 0293     		str	r3, [sp, #8]
  88 0014 0393     		str	r3, [sp, #12]
  89 0016 0493     		str	r3, [sp, #16]
  90 0018 0593     		str	r3, [sp, #20]
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  91              		.loc 1 147 3 is_stmt 1 view .LVU12
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  92              		.loc 1 147 36 is_stmt 0 view .LVU13
  93 001a 0122     		movs	r2, #1
  94 001c 0692     		str	r2, [sp, #24]
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  95              		.loc 1 148 3 is_stmt 1 view .LVU14
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  96              		.loc 1 148 30 is_stmt 0 view .LVU15
  97 001e 4FF48033 		mov	r3, #65536
  98 0022 0793     		str	r3, [sp, #28]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  99              		.loc 1 149 3 is_stmt 1 view .LVU16
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 100              		.loc 1 150 3 view .LVU17
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 101              		.loc 1 150 30 is_stmt 0 view .LVU18
 102 0024 0A92     		str	r2, [sp, #40]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 103              		.loc 1 151 3 is_stmt 1 view .LVU19
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 104              		.loc 1 151 34 is_stmt 0 view .LVU20
 105 0026 0222     		movs	r2, #2
 106 0028 0D92     		str	r2, [sp, #52]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 107              		.loc 1 152 3 is_stmt 1 view .LVU21
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 108              		.loc 1 152 35 is_stmt 0 view .LVU22
 109 002a 0E93     		str	r3, [sp, #56]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 110              		.loc 1 153 3 is_stmt 1 view .LVU23
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 9


 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 111              		.loc 1 153 32 is_stmt 0 view .LVU24
 112 002c 4FF4E013 		mov	r3, #1835008
 113 0030 0F93     		str	r3, [sp, #60]
 154:Core/Src/main.c ****   {
 114              		.loc 1 154 3 is_stmt 1 view .LVU25
 154:Core/Src/main.c ****   {
 115              		.loc 1 154 7 is_stmt 0 view .LVU26
 116 0032 06A8     		add	r0, sp, #24
 117 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 118              	.LVL1:
 154:Core/Src/main.c ****   {
 119              		.loc 1 154 6 view .LVU27
 120 0038 80B9     		cbnz	r0, .L7
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 121              		.loc 1 161 3 is_stmt 1 view .LVU28
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 122              		.loc 1 161 31 is_stmt 0 view .LVU29
 123 003a 0F23     		movs	r3, #15
 124 003c 0193     		str	r3, [sp, #4]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 125              		.loc 1 163 3 is_stmt 1 view .LVU30
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 126              		.loc 1 163 34 is_stmt 0 view .LVU31
 127 003e 0221     		movs	r1, #2
 128 0040 0291     		str	r1, [sp, #8]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 129              		.loc 1 164 3 is_stmt 1 view .LVU32
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 130              		.loc 1 164 35 is_stmt 0 view .LVU33
 131 0042 0023     		movs	r3, #0
 132 0044 0393     		str	r3, [sp, #12]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 133              		.loc 1 165 3 is_stmt 1 view .LVU34
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 134              		.loc 1 165 36 is_stmt 0 view .LVU35
 135 0046 4FF48062 		mov	r2, #1024
 136 004a 0492     		str	r2, [sp, #16]
 166:Core/Src/main.c **** 
 137              		.loc 1 166 3 is_stmt 1 view .LVU36
 166:Core/Src/main.c **** 
 138              		.loc 1 166 36 is_stmt 0 view .LVU37
 139 004c 0593     		str	r3, [sp, #20]
 168:Core/Src/main.c ****   {
 140              		.loc 1 168 3 is_stmt 1 view .LVU38
 168:Core/Src/main.c ****   {
 141              		.loc 1 168 7 is_stmt 0 view .LVU39
 142 004e 01A8     		add	r0, sp, #4
 143 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 144              	.LVL2:
 168:Core/Src/main.c ****   {
 145              		.loc 1 168 6 view .LVU40
 146 0054 20B9     		cbnz	r0, .L8
 172:Core/Src/main.c **** 
 147              		.loc 1 172 1 view .LVU41
 148 0056 11B0     		add	sp, sp, #68
 149              	.LCFI2:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 10


 150              		.cfi_remember_state
 151              		.cfi_def_cfa_offset 4
 152              		@ sp needed
 153 0058 5DF804FB 		ldr	pc, [sp], #4
 154              	.L7:
 155              	.LCFI3:
 156              		.cfi_restore_state
 156:Core/Src/main.c ****   }
 157              		.loc 1 156 5 is_stmt 1 view .LVU42
 158 005c FFF7FEFF 		bl	Error_Handler
 159              	.LVL3:
 160              	.L8:
 170:Core/Src/main.c ****   }
 161              		.loc 1 170 5 view .LVU43
 162 0060 FFF7FEFF 		bl	Error_Handler
 163              	.LVL4:
 164              		.cfi_endproc
 165              	.LFE69:
 167              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 168              		.align	2
 169              	.LC0:
 170 0000 57616974 		.ascii	"Waiting.....\000"
 170      696E672E 
 170      2E2E2E2E 
 170      00
 171 000d 000000   		.align	2
 172              	.LC1:
 173 0010 49443A20 		.ascii	"ID: %02X %02X %02X %02X\000"
 173      25303258 
 173      20253032 
 173      58202530 
 173      32582025 
 174              		.align	2
 175              	.LC2:
 176 0028 4D616E64 		.ascii	"MandeviceLab\000"
 176      65766963 
 176      654C6162 
 176      00
 177              		.section	.text.main,"ax",%progbits
 178              		.align	1
 179              		.global	main
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 184              	main:
 185              	.LFB68:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 186              		.loc 1 70 1 view -0
 187              		.cfi_startproc
 188              		@ Volatile: function does not return.
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 00B5     		push	{lr}
 192              	.LCFI4:
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 14, -4
 195 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 11


 196              	.LCFI5:
 197              		.cfi_def_cfa_offset 16
  78:Core/Src/main.c **** 
 198              		.loc 1 78 3 view .LVU45
 199 0004 FFF7FEFF 		bl	HAL_Init
 200              	.LVL5:
  85:Core/Src/main.c **** 
 201              		.loc 1 85 3 view .LVU46
 202 0008 FFF7FEFF 		bl	SystemClock_Config
 203              	.LVL6:
  92:Core/Src/main.c ****   MX_USART1_UART_Init();
 204              		.loc 1 92 3 view .LVU47
 205 000c FFF7FEFF 		bl	MX_GPIO_Init
 206              	.LVL7:
  93:Core/Src/main.c ****   MX_SPI1_Init();
 207              		.loc 1 93 3 view .LVU48
 208 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 209              	.LVL8:
  94:Core/Src/main.c ****   MX_I2C1_Init();
 210              		.loc 1 94 3 view .LVU49
 211 0014 FFF7FEFF 		bl	MX_SPI1_Init
 212              	.LVL9:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 213              		.loc 1 95 3 view .LVU50
 214 0018 FFF7FEFF 		bl	MX_I2C1_Init
 215              	.LVL10:
  98:Core/Src/main.c ****   lcd_init();
 216              		.loc 1 98 3 view .LVU51
 217 001c FFF7FEFF 		bl	rc522_init
 218              	.LVL11:
  99:Core/Src/main.c ****   lcd_clear_display();
 219              		.loc 1 99 3 view .LVU52
 220 0020 FFF7FEFF 		bl	lcd_init
 221              	.LVL12:
 100:Core/Src/main.c ****   /* USER CODE END 2 */
 222              		.loc 1 100 3 view .LVU53
 223 0024 FFF7FEFF 		bl	lcd_clear_display
 224              	.LVL13:
 225              	.L10:
 105:Core/Src/main.c ****   {
 226              		.loc 1 105 3 view .LVU54
 116:Core/Src/main.c ****     lcd_send_string("Waiting.....");
 227              		.loc 1 116 5 view .LVU55
 228 0028 0021     		movs	r1, #0
 229 002a 0120     		movs	r0, #1
 230 002c FFF7FEFF 		bl	lcd_goto_XY
 231              	.LVL14:
 117:Core/Src/main.c ****     HAL_Delay(100);
 232              		.loc 1 117 5 view .LVU56
 233 0030 1648     		ldr	r0, .L13
 234 0032 FFF7FEFF 		bl	lcd_send_string
 235              	.LVL15:
 118:Core/Src/main.c ****     if(rc522_check(CardID) == RC522_OK)
 236              		.loc 1 118 5 view .LVU57
 237 0036 6420     		movs	r0, #100
 238 0038 FFF7FEFF 		bl	HAL_Delay
 239              	.LVL16:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 12


 119:Core/Src/main.c ****     {
 240              		.loc 1 119 5 view .LVU58
 119:Core/Src/main.c ****     {
 241              		.loc 1 119 8 is_stmt 0 view .LVU59
 242 003c 1448     		ldr	r0, .L13+4
 243 003e FFF7FEFF 		bl	rc522_check
 244              	.LVL17:
 119:Core/Src/main.c ****     {
 245              		.loc 1 119 7 view .LVU60
 246 0042 0028     		cmp	r0, #0
 247 0044 F0D1     		bne	.L10
 121:Core/Src/main.c ****       //HAL_UART_Transmit(&huart1, (uint8_t *)szBuff, strlen(szBuff), 1000);
 248              		.loc 1 121 7 is_stmt 1 view .LVU61
 121:Core/Src/main.c ****       //HAL_UART_Transmit(&huart1, (uint8_t *)szBuff, strlen(szBuff), 1000);
 249              		.loc 1 121 56 is_stmt 0 view .LVU62
 250 0046 124A     		ldr	r2, .L13+4
 121:Core/Src/main.c ****       //HAL_UART_Transmit(&huart1, (uint8_t *)szBuff, strlen(szBuff), 1000);
 251              		.loc 1 121 78 view .LVU63
 252 0048 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 121:Core/Src/main.c ****       //HAL_UART_Transmit(&huart1, (uint8_t *)szBuff, strlen(szBuff), 1000);
 253              		.loc 1 121 89 view .LVU64
 254 004a D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 121:Core/Src/main.c ****       //HAL_UART_Transmit(&huart1, (uint8_t *)szBuff, strlen(szBuff), 1000);
 255              		.loc 1 121 7 view .LVU65
 256 004c 114C     		ldr	r4, .L13+8
 257 004e 0191     		str	r1, [sp, #4]
 258 0050 0093     		str	r3, [sp]
 259 0052 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 260 0054 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 261 0056 1049     		ldr	r1, .L13+12
 262 0058 2046     		mov	r0, r4
 263 005a FFF7FEFF 		bl	sprintf
 264              	.LVL18:
 123:Core/Src/main.c ****       lcd_goto_XY(1,0);
 265              		.loc 1 123 7 is_stmt 1 view .LVU66
 266 005e FFF7FEFF 		bl	lcd_clear_display
 267              	.LVL19:
 124:Core/Src/main.c ****       lcd_send_string("MandeviceLab");
 268              		.loc 1 124 7 view .LVU67
 269 0062 0021     		movs	r1, #0
 270 0064 0120     		movs	r0, #1
 271 0066 FFF7FEFF 		bl	lcd_goto_XY
 272              	.LVL20:
 125:Core/Src/main.c ****       lcd_goto_XY(2,0);
 273              		.loc 1 125 7 view .LVU68
 274 006a 0C48     		ldr	r0, .L13+16
 275 006c FFF7FEFF 		bl	lcd_send_string
 276              	.LVL21:
 126:Core/Src/main.c ****       lcd_send_string(szBuff);
 277              		.loc 1 126 7 view .LVU69
 278 0070 0021     		movs	r1, #0
 279 0072 0220     		movs	r0, #2
 280 0074 FFF7FEFF 		bl	lcd_goto_XY
 281              	.LVL22:
 127:Core/Src/main.c ****       HAL_Delay(4000);
 282              		.loc 1 127 7 view .LVU70
 283 0078 2046     		mov	r0, r4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 13


 284 007a FFF7FEFF 		bl	lcd_send_string
 285              	.LVL23:
 128:Core/Src/main.c ****       lcd_clear_display();
 286              		.loc 1 128 7 view .LVU71
 287 007e 4FF47A60 		mov	r0, #4000
 288 0082 FFF7FEFF 		bl	HAL_Delay
 289              	.LVL24:
 129:Core/Src/main.c ****     }
 290              		.loc 1 129 7 view .LVU72
 291 0086 FFF7FEFF 		bl	lcd_clear_display
 292              	.LVL25:
 293 008a CDE7     		b	.L10
 294              	.L14:
 295              		.align	2
 296              	.L13:
 297 008c 00000000 		.word	.LC0
 298 0090 00000000 		.word	.LANCHOR0
 299 0094 00000000 		.word	.LANCHOR1
 300 0098 10000000 		.word	.LC1
 301 009c 28000000 		.word	.LC2
 302              		.cfi_endproc
 303              	.LFE68:
 305              		.global	szBuff
 306              		.global	CardID
 307              		.section	.bss.CardID,"aw",%nobits
 308              		.align	2
 309              		.set	.LANCHOR0,. + 0
 312              	CardID:
 313 0000 00000000 		.space	5
 313      00
 314              		.section	.bss.szBuff,"aw",%nobits
 315              		.align	2
 316              		.set	.LANCHOR1,. + 0
 319              	szBuff:
 320 0000 00000000 		.space	100
 320      00000000 
 320      00000000 
 320      00000000 
 320      00000000 
 321              		.text
 322              	.Letext0:
 323              		.file 3 "d:\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 324              		.file 4 "d:\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 325              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 326              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 327              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 328              		.file 8 "Core/Inc/rc522.h"
 329              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 330              		.file 10 "Core/Inc/gpio.h"
 331              		.file 11 "Core/Inc/usart.h"
 332              		.file 12 "Core/Inc/spi.h"
 333              		.file 13 "Core/Inc/i2c.h"
 334              		.file 14 "Core/Inc/i2c-lcd.h"
 335              		.file 15 "d:\\10 2021.10\\arm-none-eabi\\include\\stdio.h"
 336              		.file 16 "<built-in>"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:18     .text.Error_Handler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:24     .text.Error_Handler:00000000 Error_Handler
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:57     .text.SystemClock_Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:63     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:168    .rodata.main.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:178    .text.main:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:184    .text.main:00000000 main
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:297    .text.main:0000008c $d
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:319    .bss.szBuff:00000000 szBuff
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:312    .bss.CardID:00000000 CardID
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:308    .bss.CardID:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccDaauOS.s:315    .bss.szBuff:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_SPI1_Init
MX_I2C1_Init
rc522_init
lcd_init
lcd_clear_display
lcd_goto_XY
lcd_send_string
HAL_Delay
rc522_check
sprintf
